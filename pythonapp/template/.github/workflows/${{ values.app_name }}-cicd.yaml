name: ${{ values.app_name }}-CICD

on:
  push:
    branches: [main]
    paths:
      - "src/**"

jobs:
  CI:
    runs-on: ubuntu-latest
    outputs:
      commit_id: ${{ steps.set-sha.outputs.short_sha }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set short SHA
        id: set-sha
        run: echo "short_sha=${GITHUB_SHA::6}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: prachponleuuch/${{ values.app_name }}:${{ steps.set-sha.outputs.short_sha }}

  CD:
    needs: [CI]
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install yq
        run: pip install yq

      - name: Update Helm values file
        run: |
          echo "Updating image tag to ${{ needs.CI.outputs.commit_id }}"
          yq -Yi '.image.tag = "${{ needs.CI.outputs.commit_id }}"' \
            charts/${{ values.app_name }}/values-${{ values.app_env }}.yaml

      - name: Commit and Push Changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update image tag to ${{ needs.CI.outputs.commit_id }}"

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/

      - name: ArgoCD Login
        run: |
          argocd login argocd-server.argocd \
            --insecure \
            --grpc-web \
            --username admin \
            --password ${{ secrets.ARGOCD_PASSWORD }}

      - name: Add Repo and Create App (if needed)
        run: |
          repo='https://github.com/Alex-Uch/${{ values.app_name }}.git'
          argocd repo list --server argocd-server.argocd | grep -q "$repo" || \
            argocd repo add "$repo" --server argocd-server.argocd

          argocd app get ${{ values.app_name }} --server argocd-server.argocd || \
            argocd app create ${{ values.app_name }} \
              --server argocd-server.argocd \
              --repo "$repo" \
              --path charts/${{ values.app_name }} \
              --dest-namespace ${{ values.app_env }} \
              --dest-server https://kubernetes.default.svc \
              --values values-${{ values.app_env }}.yaml \
              --revision main \
              --sync-policy manual \
              --sync-option CreateNamespace=true

      - name: ArgoCD Sync and Wait
        run: |
          argocd app sync ${{ values.app_name }} --server argocd-server.argocd
          argocd app wait ${{ values.app_name }} --timeout 180 --server argocd-server.argocd
