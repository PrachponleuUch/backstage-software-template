name: ${{ values.app_name }}-cicd

on:
  push:
    branches:
      - main
      - master
    paths:
      - "src/**"

jobs:
  # ----------------------
  # CI JOB - Build & Push
  # ----------------------
  ci:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Create a short commit ID for tagging the Docker image
      - name: Shorten commit ID
        run: echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{'${{ secrets.DOCKER_USERNAME }}'}}
          password: ${{'${{ secrets.DOCKER_TOKEN }}'}}

      # Build and push the Docker image
      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: prachponleuuch/${{ values.app_name }}:${{'${{ env.COMMIT_ID }}'}}

    # Export commit ID for CD job
    outputs:
      commit_id: ${{'${{ env.COMMIT_ID }}'}}

  # ----------------------
  # CD JOB - Deploy via ArgoCD
  # ----------------------
  cd:
    needs: ci
    runs-on: self-hosted

    steps:
      # Checkout the same repo on the runner
      - uses: actions/checkout@v3

      # Modify Helm values.yaml to use the new image tag
      - name: Update Helm values.yaml
        run: |
          echo "Updating Helm values.yaml with new image tag..."
          pip install yq
          yq -Yi '.image.tag = "${{'${{ needs.ci.outputs.commit_id }}'}}"' charts/${{ values.app_name }}/values-${{ values.app_env }}.yaml

      # Commit and push the updated values file
      - name: Commit updated values.yaml
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update image tag to ${{'${{ needs.ci.outputs.commit_id }}'}}"
          add: "charts/${{ values.app_name }}/values-${{ values.app_env }}.yaml"

      # Install ArgoCD CLI
      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd

      # Login to ArgoCD
      - name: Login to ArgoCD
        run: |
          argocd login argocd-server.argocd \
            --insecure \
            --grpc-web \
            --username admin \
            --password ${{'${{ secrets.ARGOCD_PASSWORD }}'}}

      # Ensure repo is registered (idempotent with --upsert)
      - name: Register ArgoCD repo
        run: |
          repo="https://github.com/alex-uch/${{ values.app_name }}.git"
          echo "Registering ArgoCD repo: $repo"
          argocd repo add $repo --upsert || echo "Repo already exists"

      # Ensure or create ArgoCD application
      - name: Create or update ArgoCD app
        run: |
          echo "Ensuring ArgoCD app exists..."
          argocd app get ${{ values.app_name }} || argocd app create ${{ values.app_name }} \
            --repo https://github.com/alex-uch/${{ values.app_name }}.git \
            --path charts/${{ values.app_name }} \
            --dest-namespace ${{ values.app_env }} \
            --dest-server https://kubernetes.default.svc \
            --values values-${{ values.app_env }}.yaml \
            --revision HEAD \
            --sync-policy manual \
            --sync-option CreateNamespace=true

      # Sync the ArgoCD app
      - name: Sync and wait for ArgoCD app
        run: |
          argocd app sync ${{ values.app_name }}
          argocd app wait ${{ values.app_name }} --timeout 180
